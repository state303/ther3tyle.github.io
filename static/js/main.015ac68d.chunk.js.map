{"version":3,"sources":["assets/images/arrow.svg","assets/images/bae-dog-01@3x.png","assets/images/bgLetters.svg","serviceWorker.js","apis/jsonPlaceholder.js","redux/actions/index.js","redux/actions/types.js","components/Layout/Navigation/BackdropMenu/BackdropToggle/BackdropToggle.js","components/Layout/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Layout/Navigation/NavigationItems/NavigationItems.js","hoc/Aux/Aux.js","components/UI/LogoButton/LogoButton.js","components/Layout/Navigation/Navigation.js","components/UI/Backdrop/Backdrop.js","components/Layout/Navigation/BackdropMenu/BackdropMenu.js","components/Layout/Layout.js","components/Home/Home.js","components/UI/Card/Card.js","components/UI/SearchBar/SearchBar.js","components/Blog/Blog.js","components/Blog/SinglePost/SinglePost.js","Router/Router.js","App.js","redux/reducers/backdropMenuReducer.js","redux/reducers/themeReducer.js","redux/reducers/index.js","redux/reducers/postsReducer.js","redux/reducers/loremPicsumReducer.js","index.js","redux/configureStore.js"],"names":["module","exports","Boolean","window","location","hostname","match","axios","create","baseURL","changeBgColor","value","type","payload","changeTextColor","connect","openBackdropMenu","props","onClick","className","state","textColor","colors","text","to","link","style","color","name","NavigationItems","items","map","item","_","key","toLowerCase","Aux","children","LogoButton","handleLogoClick","background","Backdrop","clicked","click","classValues","this","show","Component","showBackdrop","backdropMenu","closeBackdrop","Layout","useState","showMenu","setShowMenu","toggleMenu","prevState","open","Home","src","backgroundLetters","alt","arrow","doggy","Card","title","length","i","substring","imageSource","SearchBar","Blog","fetchPosts","posts","post","id","body","author","userId","renderPosts","images","loremPicsum","dispatch","a","jsonPlaceholder","get","response","data","SinglePost","Router","basename","process","path","exact","component","bgColor","INITIAL_STATE","combineReducers","action","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","thunk","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.015ac68d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.d7684a7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/bae-dog-01@3x.d9d2af11.png\";","module.exports = __webpack_public_path__ + \"static/media/bgLetters.fbc162e1.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"https://jsonplaceholder.typicode.com\"\n});","import {BACKDROP, BG_COLOR, SHOW_MENU_ITEM, TEXT_COLOR} from \"./types\";\nimport jsonPlaceholder from \"../../apis/jsonPlaceholder\";\n\nexport const openBackdrop = () => {\n    return {\n        type: BACKDROP,\n        payload: true\n    }\n}\n\nexport const closeBackdrop = () => {\n    return {\n        type: BACKDROP,\n        payload: false\n    }\n}\n\nexport const changeBgColor = (value) => {\n    return {\n        type: BG_COLOR,\n        payload: value\n    }\n}\n\nexport const changeTextColor = (value) => {\n    return {\n        type: TEXT_COLOR,\n        payload: value\n    }\n}\n\nexport const showMenuItem = (isVisible) => {\n    return {\n        type: SHOW_MENU_ITEM,\n        payload: isVisible\n    }\n}\n\nexport const fetchPosts = () => async dispatch => {\n    const response = await jsonPlaceholder.get(\"/posts\");\n    dispatch({type: \"FETCH_POSTS\", payload: response.data});\n};","export const BACKDROP = \"BACKDROP\";\nexport const SHOW_MENU_ITEM = \"SHOW_MENU_ITEM\";\nexport const BG_COLOR = \"COLOR_SET\";\nexport const TEXT_COLOR = \"TEXT_COLOR\";","import React from \"react\";\nimport \"./BackdropToggle.scss\";\nimport { connect } from 'react-redux';\nimport {openBackdrop} from \"../../../../../redux/actions\";\n\nconst BackdropToggle = (props) => (\n  <div onClick={props.openBackdropMenu} className=\"backdrop-toggle\">\n    {/* Three lines for toggle button */}\n    <div/>\n    <div/>\n    <div/>\n  </div>\n);\n\nexport default connect(null, {openBackdropMenu: openBackdrop})(BackdropToggle);","import React from \"react\";\nimport \"./NavigationItem.css\";\nimport {connect} from \"react-redux\";\nimport {changeBgColor, changeTextColor} from \"../../../../../redux/actions\";\nimport {Link} from 'react-router-dom';\n\nconst NavigationItem = (props) => {\n\n    const clicked = () => {\n        props.changeBgColor(\"#ffffff\")\n        props.changeTextColor(\"#141414\")\n    }\n\n    return (\n        <Link to={`/${props.link}`}>\n            <li className=\"navigation-item\" onClick={clicked} style={{color: props.textColor}}>\n                {props.name}\n            </li>\n        </Link>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        changeBgColor: state.changeBgColor,\n        changeTextColor: state.changeTextColor,\n        textColor: state.colors.text\n    }\n}\n\nexport default connect(mapStateToProps, {changeBgColor, changeTextColor})(NavigationItem);","import React from \"react\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\nimport \"./NavigationItems.scss\";\n\nconst NavigationItems = (props) => {\n\n  const items = ['Blog', 'Sound', 'Portfolio', 'CV'].map((item, _) => {\n    return (\n      <NavigationItem key={item} name={item} link={item.toLowerCase()}/>\n    );\n  });\n\n  return (\n    <ul className=\"navigation-items\">\n      {items}\n    </ul>\n  );\n}\n\nexport default NavigationItems;","const Aux = (props) => {\n  return props.children;\n};\n\nexport default Aux;\n","import React from \"react\";\nimport \"./LogoButton.css\";\nimport {Link} from \"react-router-dom\";\n\nconst LogoButton = (props) => {\n    return (\n        <div className=\"logo-button-container\" onClick={props.handleLogoClick}>\n            <Link to={props.link}>\n                <figure className=\"logo-button\" style={{background: props.color}}/>\n            </Link>\n        </div>\n    )\n};\n\nexport default LogoButton\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {changeBgColor, changeTextColor} from \"../../../redux/actions\";\n\nimport \"./Navigation.scss\";\nimport BackdropToggle from \"./BackdropMenu/BackdropToggle/BackdropToggle\";\nimport NavigationItems from \"./NavigationItems/NavigationItems\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport LogoButton from \"../../UI/LogoButton/LogoButton\";\n\nconst Navigation = (props) => {\n    const logoClickHandler = () => {\n        props.changeBgColor(\"#3177e6\");\n        props.changeTextColor(\"#ffffff\");\n    }\n\n    return (\n        <Aux>\n            <div className=\"menu-wrapper\">\n                <LogoButton link=\"/\" handleLogoClick={logoClickHandler} color={props.color}/>\n                {/* DEFAULT NAV MENU */}\n                <nav className=\"desktop-nav\">\n                    <NavigationItems/>\n                </nav>\n                <div className=\"toggle-button-container\">\n                    <BackdropToggle/>\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        changeBgColor: state.changeBgColor,\n        changeTextColor: state.changeTextColor,\n        color: state.colors.text\n    }\n}\n\nexport default connect(mapStateToProps, {changeBgColor, changeTextColor})(Navigation);","import React, {Component} from \"react\";\n\nimport './Backdrop.css';\nimport NavigationItems from \"../../Layout/Navigation/NavigationItems/NavigationItems\";\n\nclass Backdrop extends Component {\n\n    clicked = () => {\n        this.props.click();\n    }\n\n    render() {\n        // backdrop is default\n        // append \" open\" or \" close\" as required\n        const classValues = \"backdrop\" + this.props.show;\n        return (\n            <div className={classValues}\n                 onClick={this.clicked}>\n                <NavigationItems/>\n            </div>\n        );\n    }\n}\n\nexport default Backdrop;","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {closeBackdrop} from \"../../../../redux/actions\";\nimport Aux from \"../../../../hoc/Aux/Aux\";\nimport Backdrop from \"../../../UI/Backdrop/Backdrop\";\n\nconst BackdropMenu = (props) => {\n  return (\n    <Aux>\n      <Backdrop show={props.showBackdrop} click={props.closeBackdrop} />\n      <nav className=\"backdrop-nav\"/>\n    </Aux>\n  )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        showBackdrop: state.backdropMenu.showBackdrop\n    }\n}\n\nexport default connect(mapStateToProps, {closeBackdrop})(BackdropMenu);","import React, {useState} from \"react\";\nimport \"./Layout.css\";\nimport Navigation from \"./Navigation/Navigation\";\nimport BackdropMenu from \"./Navigation/BackdropMenu/BackdropMenu\";\n\nconst Layout = (props) => {\n\n  const [showMenu, setShowMenu] = useState(false);\n\n  const closeMenuHandler = () => {\n    setShowMenu(false);\n  };\n\n  const showMenuHandler = () => {\n    setShowMenu(prevState => !prevState);\n  };\n\n\n  return (\n    <div className=\"layout\">\n      <div className=\"container\">\n        <header>\n          <Navigation toggleMenu={showMenuHandler}/>\n        </header>\n        <BackdropMenu open={showMenu} click={closeMenuHandler}/>\n        <main>\n          {props.children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport \"./Home.css\";\n\nimport arrow from \"../../assets/images/arrow.svg\";\nimport doggy from \"../../assets/images/bae-dog-01@3x.png\";\nimport backgroundLetters from \"../../assets/images/bgLetters.svg\";\n\nconst Home = () => (\n    <div className=\"background-images\">\n      <img src={backgroundLetters} className=\"background-image-text\" alt=\"backgroundLetters\"/>\n      <img src={arrow} className=\"background-image-arrow\" alt=\"arrow\"/>\n      <img src={doggy} className=\"background-image-doggy\" alt=\"doggy\"/>\n    </div>\n);\n\nexport default Home;\n","import React, {Component} from \"react\";\nimport \"./Card.css\";\n\nclass Card extends Component {\n    render() {\n        let title = this.props.title;\n        if (this.props.title.length > 35) {\n            for (let i = 35; i < title.length; i++) {\n                if (title[i] === \" \") {\n                    title = title.substring(0, i);\n                    break;\n                }\n                if (i === title.length - 1)\n                    title = title.substring(0, 35);\n            }\n            title += \"...\";\n        }\n\n        return (\n            <div className=\"card\">\n                <div className=\"card-content card__image\">\n                    <img src={this.props.imageSource}\n                         alt={this.props.title}/>\n                </div>\n                <div className=\"card-content card__title\">\n                    {title}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, {Component} from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends Component {\n    render() {\n        return (\n            <div className=\"search-bar-container\">\n                <input type=\"text\" className=\"search-bar__text-input\"/>\n                <div className=\"search-bar__text\"/>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {fetchPosts, changeBgColor, changeTextColor} from \"../../redux/actions\";\n\nimport Card from \"../UI/Card/Card\";\nimport \"./Blog.css\";\nimport SearchBar from \"../UI/SearchBar/SearchBar\";\n\nclass Blog extends Component {\n\n    componentDidMount() {\n        this.props.fetchPosts();\n        this.props.changeBgColor(\"#ffffff\");\n        this.props.changeTextColor(\"#141414\");\n    }\n\n    renderPosts() {\n        return this.props.posts.map(post => {\n            return (\n                <Card\n                    key={post.id}\n                    imageSource={`https://picsum.photos/id/${post.id}/600/600`}\n                    title={post.title}\n                    text={post.body}\n                    author={post.userId}/>\n            )\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"blog-container\">\n                <SearchBar />\n                <div className=\"blog\">\n                    <div className=\"posts\">\n                        {this.renderPosts()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {posts: state.posts, images: state.loremPicsum}\n};\n\nexport default connect(mapStateToProps, {fetchPosts, changeBgColor, changeTextColor})(Blog);\n","import React, {Component} from \"react\";\nimport \"./SinglePost.css\";\n\n\nclass SinglePost extends Component {\n    render() {\n        return (\n            <div className={SinglePost}>\n                <h1 className=\"post__title\">Blog Title</h1>\n\n                {/*Dummy Text ** REMOVE LATER ** */}\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam vel semper dolor. Maecenas ut enim sollicitudin, aliquam est sodales, suscipit arcu. Praesent leo dolor, pellentesque eget nulla eget, consequat iaculis nulla. Integer mattis, tellus ut hendrerit sagittis, ipsum sapien maximus nisi, maximus auctor odio arcu id enim. Vestibulum vitae sapien hendrerit, pellentesque tellus in, consectetur metus. Vivamus sed magna neque. Nam vel gravida tortor, vel sodales purus. Mauris vitae nulla odio. Phasellus pulvinar elit ut libero laoreet, id interdum arcu elementum. Suspendisse nunc augue, suscipit vel hendrerit sit amet, bibendum ac nulla. Phasellus sem augue, condimentum a auctor ac, volutpat nec dui.</p>\n                <p>Vestibulum eu arcu erat. In in feugiat risus, in lobortis augue. Quisque vestibulum metus porta iaculis facilisis. Vestibulum in porta leo. Nulla et augue vitae eros volutpat accumsan ut ac sem. Quisque sollicitudin felis nunc, sit amet fringilla mi placerat eu. Etiam eu gravida augue, porttitor consequat enim. Praesent sit amet lacus at magna fringilla posuere et nec odio. Duis eu semper metus.</p>\n                <p>Aliquam at ornare nunc. Proin ultrices sed metus nec ornare. Vestibulum varius mattis justo volutpat vestibulum. Aliquam nec vestibulum velit. Nunc aliquet sollicitudin dui, ac fermentum eros. Nam mi tellus, vestibulum et dui eget, facilisis consequat justo. Nulla lacus nulla, faucibus et tortor ut, mattis tincidunt dui. Phasellus varius felis sed enim malesuada, non eleifend nisl semper.</p>\n                <button>btn</button>\n            </div>\n        );\n    }\n}\n\nexport default SinglePost;\n","import React from \"react\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nimport Layout from \"../components/Layout/Layout\";\nimport Home from \"../components/Home/Home\";\nimport Blog from \"../components/Blog/Blog\";\nimport SinglePost from \"../components/Blog/SinglePost/SinglePost\";\n\nconst Router = (props) => {\n    const baseURL = process.env.PUBLIC_URL;\n\n    return (\n        <div>\n            <BrowserRouter basename={baseURL}>\n                <Layout>\n                    <Route path={baseURL + \"/\"} exact component={Home}/>\n                    <Route path={baseURL + \"/blog\"} exact component={Blog}/>\n                    <Route path={baseURL + \"/blog/post\"} exact component={SinglePost}/>\n                </Layout>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default Router;\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\nimport {changeBgColor} from \"./redux/actions\";\nimport Router from \"./Router/Router\";\n\n\nconst App = (props) => {\n    return (\n        <div className=\"app\" style={{background: props.bgColor}}>\n            <Router/>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        bgColor: state.colors.background\n    }\n}\n\nexport default connect(mapStateToProps, {changeBgColor})(App);","import {BACKDROP} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    showBackdrop: \" close\",\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case BACKDROP:\n            const value = action.payload ? \" open\" : \" close\";\n            return {...state, showBackdrop: value}\n        default:\n            return state;\n    }\n}","import {BG_COLOR, TEXT_COLOR} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    background: \"#3177e6\",\n    text: \"#ffffff\"\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case BG_COLOR:\n            return {...state, background: action.payload}\n        case TEXT_COLOR:\n            return {...state, text: action.payload}\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport backdropMenuReducer from \"./backdropMenuReducer\";\nimport postsReducer from \"./postsReducer\";\nimport loremPicsumReducer from \"./loremPicsumReducer\";\nimport themeReducer from \"./themeReducer\";\n\nexport default combineReducers({\n    backdropMenu: backdropMenuReducer,\n    posts: postsReducer,\n    colors: themeReducer,\n    loremPicsum: loremPicsumReducer\n});","export default(state = [], action) => {\n    switch(action.type){\n        case \"FETCH_POSTS\":\n            return action.payload;\n        default:\n            return state;\n    }\n}","export default(state = [], action) => {\n    switch(action.type) {\n        case \"FETCH_RANDOM_IMAGE\":\n            return [...state, action.payload]\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import {createStore, applyMiddleware, compose} from 'redux';\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nexport default function configureStore(initialState) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //add support for redux devtools\n    return createStore(\n        reducers,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk))\n    );\n}"],"sourceRoot":""}