{"version":3,"sources":["assets/images/arrow.svg","assets/images/bae-dog-01@3x.png","assets/images/bgLetters.svg","serviceWorker.js","apis/jsonPlaceholder.js","components/Layout/Navigation/BackdropMenu/BackdropToggle/BackdropToggle.js","redux/actions/index.js","redux/actions/types.js","components/Layout/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Layout/Navigation/NavigationItems/NavigationItems.js","hoc/Aux/Aux.js","components/UI/LogoButton/LogoButton.js","components/Layout/Navigation/Navigation.js","components/UI/Backdrop/Backdrop.js","components/Layout/Navigation/BackdropMenu/BackdropMenu.js","components/Layout/Layout.js","components/Home/Home.js","components/UI/Button/Button.js","components/UI/Card/Card.js","components/Blog/Blog.js","Router/Router.js","App.js","redux/reducers/backdropMenuReducer.js","redux/reducers/index.js","redux/reducers/postsReducer.js","redux/reducers/loremPicsumReducer.js","index.js","redux/configureStore.js"],"names":["module","exports","Boolean","window","location","hostname","match","axios","create","baseURL","connect","openBackdropMenu","type","payload","props","onClick","className","NavigationItem","to","link","name","NavigationItems","items","map","item","_","key","toLowerCase","Aux","children","LogoButton","Navigation","Backdrop","clicked","click","classValues","this","show","Component","state","showBackdrop","backdropMenu","closeBackdrop","Layout","useState","showMenu","setShowMenu","toggleMenu","prevState","open","Home","src","backgroundLetters","alt","arrow","doggy","Card","imageSource","title","author","Blog","fetchPosts","posts","post","id","text","body","userId","renderPosts","images","loremPicsum","dispatch","a","jsonPlaceholder","get","response","data","Router","basename","process","path","exact","component","App","INITIAL_STATE","combineReducers","action","value","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","thunk","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.805bbc33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.d7684a7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/bae-dog-01@3x.d9d2af11.png\";","module.exports = __webpack_public_path__ + \"static/media/bgLetters.fbc162e1.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: \"https://jsonplaceholder.typicode.com\"\n});","import React from \"react\";\nimport \"./BackdropToggle.scss\";\nimport { connect } from 'react-redux';\nimport {openBackdrop} from \"../../../../../redux/actions\";\n\nconst BackdropToggle = (props) => (\n  <div onClick={props.openBackdropMenu} className=\"backdrop-toggle\">\n    {/* Three lines for toggle button */}\n    <div/>\n    <div/>\n    <div/>\n  </div>\n);\n\nexport default connect(null, {openBackdropMenu: openBackdrop})(BackdropToggle);","import {BACKDROP, SHOW_MENU_ITEM} from \"./types\";\nimport jsonPlaceholder from \"../../apis/jsonPlaceholder\";\n\nexport const openBackdrop = () => {\n    return {\n        type: BACKDROP,\n        payload: true\n    }\n}\n\nexport const closeBackdrop = () => {\n    return {\n        type: BACKDROP,\n        payload: false\n    }\n}\n\nexport const showMenuItem = (isVisible) => {\n    return {\n        type: SHOW_MENU_ITEM,\n        payload: isVisible\n    }\n}\n\nexport const fetchPosts = () => async dispatch => {\n    const response = await jsonPlaceholder.get(\"/posts\");\n    dispatch({type: \"FETCH_POSTS\", payload: response.data});\n};","export const BACKDROP = \"BACKDROP\";\nexport const SHOW_MENU_ITEM = \"SHOW_MENU_ITEM\";\n","import React from \"react\";\nimport \"./NavigationItem.scss\";\nimport {Link} from 'react-router-dom';\n\nconst NavigationItem = (props) => {\n    return (\n        <Link to={`/${props.link}`}>\n            <li className=\"navigation-item\">\n                {props.name}\n            </li>\n        </Link>\n    );\n}\n\nexport default NavigationItem;","import React from \"react\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\nimport \"./NavigationItems.scss\";\n\nconst NavigationItems = (props) => {\n\n  const items = ['Blog', 'Sound', 'Portfolio', 'CV'].map((item, _) => {\n    return (\n      <NavigationItem key={item} name={item} link={item.toLowerCase()}/>\n    );\n  });\n\n  return (\n    <ul className=\"navigation-items\">\n      {items}\n    </ul>\n  );\n}\n\nexport default NavigationItems;","const Aux = (props) => {\n  return props.children;\n}\n\nexport default Aux;","import React from \"react\";\nimport \"./LogoButton.css\";\nimport {Link} from \"react-router-dom\";\n\nconst LogoButton = (props) => {\n    return (\n        <div className=\"logo-button-container\">\n            <Link to={props.link}>\n                <figure className=\"logo-button\"/>\n            </Link>\n        </div>\n    )\n}\n\nexport default LogoButton","import React from \"react\";\nimport \"./Navigation.scss\";\nimport BackdropToggle from \"./BackdropMenu/BackdropToggle/BackdropToggle\";\nimport NavigationItems from \"./NavigationItems/NavigationItems\";\nimport Aux from \"../../../hoc/Aux/Aux\";\nimport LogoButton from \"../../UI/LogoButton/LogoButton\";\n\nconst Navigation = () => {\n\n    return (\n        <Aux>\n            <div className=\"menu-wrapper\">\n                <LogoButton link=\"/\"/>\n                {/* DEFAULT NAV MENU */}\n                <nav className=\"desktop-nav\">\n                    <NavigationItems/>\n                </nav>\n                <div className=\"toggle-button-container\">\n                    <BackdropToggle/>\n                </div>\n            </div>\n        </Aux>\n    )\n}\n\nexport default Navigation;","import React, {Component} from \"react\";\n\nimport './Backdrop.css';\nimport NavigationItems from \"../../Layout/Navigation/NavigationItems/NavigationItems\";\n\nclass Backdrop extends Component {\n\n    clicked = () => {\n        this.props.click();\n    }\n\n    render() {\n        // backdrop is default\n        // append \" open\" or \" close\" as required\n        const classValues = \"backdrop\" + this.props.show;\n        return (\n            <div className={classValues}\n                 onClick={this.clicked}>\n                <NavigationItems/>\n            </div>\n        );\n    }\n}\n\nexport default Backdrop;","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {closeBackdrop} from \"../../../../redux/actions\";\nimport Aux from \"../../../../hoc/Aux/Aux\";\nimport Backdrop from \"../../../UI/Backdrop/Backdrop\";\n\nconst BackdropMenu = (props) => {\n  return (\n    <Aux>\n      <Backdrop show={props.showBackdrop} click={props.closeBackdrop} />\n      <nav className=\"backdrop-nav\"/>\n    </Aux>\n  )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        showBackdrop: state.backdropMenu.showBackdrop\n    }\n}\n\nexport default connect(mapStateToProps, {closeBackdrop})(BackdropMenu);","import React, {useState} from \"react\";\nimport \"./Layout.css\";\nimport Navigation from \"./Navigation/Navigation\";\nimport BackdropMenu from \"./Navigation/BackdropMenu/BackdropMenu\";\n\nconst Layout = (props) => {\n\n  const [showMenu, setShowMenu] = useState(false);\n\n  const closeMenuHandler = () => {\n    setShowMenu(false);\n  }\n\n  const showMenuHandler = () => {\n    setShowMenu(prevState => !prevState);\n  }\n\n\n  return (\n    <div className=\"layout\">\n      <div className=\"container\">\n        <header>\n          <Navigation toggleMenu={showMenuHandler}/>\n        </header>\n        <BackdropMenu open={showMenu} click={closeMenuHandler}/>\n        <main>\n          {props.children}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;","import React from \"react\";\nimport Aux from \"../../hoc/Aux/Aux\";\nimport \"./Home.css\";\n\nimport arrow from \"../../assets/images/arrow.svg\";\nimport doggy from \"../../assets/images/bae-dog-01@3x.png\";\nimport backgroundLetters from \"../../assets/images/bgLetters.svg\";\n\nconst Home = () => (\n  <Aux>\n    <div className=\"background-images\">\n      <img src={backgroundLetters} className=\"background-image-text\" alt=\"backgroundLetters\"/>\n      <img src={arrow} className=\"background-image-arrow\" alt=\"arrow\"/>\n      <img src={doggy} className=\"background-image-doggy\" alt=\"doggy\"/>\n    </div>\n  </Aux>\n);\n\nexport default Home;\n","import React from \"react\";\nimport \"./Button.css\";\n\nexport default (props) => {\n    return (\n        <div className=\"Button\">\n            READ MORE\n        </div>\n    )\n}","import React, {Component} from \"react\";\nimport \"./Card.css\";\nimport Button from \"../Button/Button\";\n\nclass Card extends Component {\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-content card__image\">\n                    <img src={this.props.imageSource}\n                         alt={this.props.title}/>\n                </div>\n                <div className=\"card-content card__hr\">\n                    <hr/>\n                </div>\n                <div className=\"card-content card__author\">\n                    {\"AUTHOR: \" + this.props.author}\n                </div>\n                <div className=\"card-content card__title\">\n                    {this.props.title}\n                </div>\n                <div className=\"card-button\">\n                    <Button/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {fetchPosts} from \"../../redux/actions\";\n\nimport Card from \"../UI/Card/Card\";\nimport \"./Blog.css\";\n\nclass Blog extends Component {\n\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    renderPosts() {\n        return this.props.posts.map(post => {\n            return (\n                <Card\n                    key={post.id}\n                    imageSource={`https://picsum.photos/id/${post.id}/300/300`}\n                    title={post.title}\n                    text={post.body}\n                    author={post.userId}/>\n            )\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"blog\">\n                <div className=\"blog-container\">\n                    {this.renderPosts()}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {posts: state.posts, images: state.loremPicsum}\n}\n\nexport default connect(mapStateToProps, {fetchPosts})(Blog);","import React from \"react\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nimport Layout from \"../components/Layout/Layout\";\nimport Home from \"../components/Home/Home\";\nimport Blog from \"../components/Blog/Blog\";\n\nconst Router = (props) => {\n    return (\n        <div>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Layout>\n                    <Route path=\"/\" exact component={Home}/>\n                    <Route path=\"/blog\" exact component={Blog}/>\n                    <Route path=\"/blog/post\" exact component={Blog}/>\n                </Layout>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default Router;\n","import React from 'react';\nimport Router from \"./Router/Router\";\n\nfunction App() {\n\n  return (\n    <div className=\"app\">\n        <Router />\n    </div>\n  );\n}\n\nexport default App;","import {BACKDROP} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n    showBackdrop: \" close\",\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case BACKDROP:\n            const value = action.payload ? \" open\" : \" close\";\n            return {...state, showBackdrop: value}\n        default:\n            return state;\n    }\n}","import {combineReducers} from \"redux\";\nimport backdropMenuReducer from \"./backdropMenuReducer\";\nimport postsReducer from \"./postsReducer\";\nimport loremPicsumReducer from \"./loremPicsumReducer\";\n\nexport default combineReducers({\n    backdropMenu: backdropMenuReducer,\n    posts: postsReducer,\n    loremPicsum: loremPicsumReducer\n});","export default(state = [], action) => {\n    switch(action.type){\n        case \"FETCH_POSTS\":\n            return action.payload;\n        default:\n            return state;\n    }\n}","export default(state = [], action) => {\n    switch(action.type) {\n        case \"FETCH_RANDOM_IMAGE\":\n            return [...state, action.payload]\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\nimport configureStore from \"./redux/configureStore\";\n\nconst store = configureStore()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import {createStore, applyMiddleware, compose} from 'redux';\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nexport default function configureStore(initialState) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //add support for redux devtools\n    return createStore(\n        reducers,\n        initialState,\n        composeEnhancers(applyMiddleware(thunk))\n    );\n}"],"sourceRoot":""}